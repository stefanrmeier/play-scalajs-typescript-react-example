# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

### ATTENTION: MANY OF THE SETTINGS ARE OVERRIDEN BY LOCAL environment.conf FILES AT THE DEPLOYMENT SITE

application.secret="changme"

# The application languages
# ~~~~~
application.langs="en"

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost:8889/example?useEncoding=true&characterEncoding=utf8&useSSL=false"
# NOTE: sclaikejdbc-config 2.2.6 doesn't support username, use 2.2.7 or higher
db.default.username=root
db.default.password=root

db.default.poolInitialSize=10
db.default.poolMaxSize=20
db.default.poolConnectionTimeoutMillis=1000

scalikejdbc.global.loggingSQLAndTime.enabled=true
scalikejdbc.global.loggingSQLAndTime.logLevel=info
scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn
scalikejdbc.global.loggingSQLAndTime.singleLineMode=false
scalikejdbc.global.loggingSQLAndTime.printUnprocessedStackTrace=false
scalikejdbc.global.loggingSQLAndTime.stackTraceDepth=10

play.filters.csrf.header.bypassHeaders {
  X-Auth-Token = "*"
  Csrf-Token = "this-is-a-great-nocheck-token"
}

#es.url = "http://localhost:9200"
es.host = "localhost"
es.port = 9200
# es.index.sourcing = "example"
# es.type.profile.src = "srcprofile"


tracking.mixpanelid = "mixpanel-id"
tracking.gaid = "UA-XXX"

upload.file.tempdir = "/var/tmp"


play.modules.enabled += "scalikejdbc.PlayModule"

# scalikejdbc.PlayModule doesn't depend on Play's DBModule
play.modules.disabled += "play.api.db.DBModule"
play.filters.csrf.bypassCorsTrustedOrigins = true

# Mailgun mailer
play.modules.disabled += "play.api.libs.mailer.MailerModule"
play.modules.enabled += "modules.MailgunModule"
mailgun.mailer {
  mock = true
  ApiBaseUrl = "https://api.mailgun.net/v3"
  ApiDomain = "mail.example.com"
  ApiKey = "key-XXX"
}



# Root logger:
logger.root=INFO

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=INFO

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.http.filters = "utils.Filters"

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "modules.AWSModule"
play.modules.enabled += "com.example.system.modules.BasicComponentsModule"
play.modules.enabled += "com.example.system.modules.EsModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

aws.s3.region = "ap-northeast-1"
aws.accessKeyId = "key"
aws.secretKey = "secret"

# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
#play.modules.enabled += "play.api.libs.mailer.MailerModule"
#play.mailer {
#  mock = true
#  host = localhost
  #  host = "smtp.sendgrid.net"
  #  port = 587
  #  tls = true
  #  user = ""
  #  user = ${?SENDGRID_USERNAME}
  #  password = ""
  #  password = ${?SENDGRID_PASSWORD}
#}


# Security Filter Configuration - Content Security Policy
play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.stripe.com *.facebook.com *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' checkout.stripe.com cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' maxcdn.bootstrapcdn.com fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' checkout.stripe.com connect.facebook.net clef.io cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' checkout.stripe.com *.facebook.com twitter.com *.xing.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" frame-src checkout.stripe.com clef.io;"
//  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' https://connect.facebook.net;"
}

include "silhouette.conf"

play.modules.enabled += be.objectify.deadbolt.scala.DeadboltModule
play.modules.enabled += modules.CustomDeadboltHook